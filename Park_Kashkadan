library(tidyverse)
library(lubridate)
library(rnoaa)
library(raster)
library(sp)
library(sf)
library(elevatr)
library(rvest)
library(curl)
library(RStoolbox)
library(RCurl)
library(MODISTools)
library(exactextractr)
#options(timeout = 4000000)
#stations = ghcnd_stations(refresh = FALSE)
#write.csv(stations, "station_data.csv")

station_data = read.csv ("station_data.csv")

park_kashkadan = data.frame(id = "park_kashkadan",
                            latitude = c(54.775444),
                            longitude = c (56.058907))


park_kashkadan_around = meteo_nearby_stations(lat_lon_df = park_kashkadan, station_data = station_data,
                                              limit = 20, var = c("PRCP", "TAVG"),
                                              year_min = 2015, year_max = 2020)


park_kashkadan_id = park_kashkadan_around[[1]]$id[1]


all_park_kashkadan_data = meteo_tidy_ghcnd(stationid = park_kashkadan_id)

all_park_kashkadan_data = all_park_kashkadan_data %>% mutate(year = year(date)) %>% 
  filter(year > 2010 & year < 2022) %>% 
  mutate(tavg = tavg/10, prcp = prcp/10) %>% 
  dplyr::select(-tmax,-tmin,-snwd)

all_park_kashkadan_data$prcp[is.na(all_park_kashkadan_data$prcp)] = 0 
park_kashkadan_cum = all_park_kashkadan_data %>% mutate(month = month(date)) %>% 
  filter(month > 4 & month < 10) %>% 
  group_by(year) %>% 
  mutate(prcp_cum = cumsum(prcp))

park_kashkadan_cum %>% summarise(prcp_avg = max(prcp_cum), n = n())


park_sf <- read_sf("Park_Kashkadan_Ufa_29-11-2021_23-27-26_geojson.geojson")

park_sp = as_Spatial(st_zm(park_sf), 
                   cast=TRUE, 
                   IDs = paste0("ID", seq_along(from)))

prj = proj4string(park_sp)
park_dem = elevatr::get_elev_raster(park_sp, 14, prj)
plot(park_dem)
plot(st_geometry(park_sf), add = TRUE)

park_dem_mask = crop(park_dem, park_sp)
plot(park_dem_mask)
plot(st_geometry(park_sf), add = TRUE)


prods = MODISTools::mt_products()
bands = MODISTools::mt_bands(product = "MOD16A2")

dates = MODISTools::mt_dates(product = "MOD16A2", lat = 54.775444, lon = 56.058907)

park_kashkadan_ET =  MODISTools::mt_subset(product = "MOD16A2",lat = 54.775444,
                                           lon =  56.058907,
                                           band = "ET_500m",
                                           start = "2019-05-01",
                                           end = "2019-10-01",
                                           km_lr = 2,
                                           km_ab = 2,
                                           site_name = "park_kashkadan",
                                           internal = TRUE,
                                           progress = TRUE) 

park_kashkadan_ET = park_kashkadan_ET %>% filter(value < 32700) %>% select(units,calendar_date,value) %>%
  mutate(doy=yday(calendar_date), year=year(calendar_date)) %>% group_by(doy,year,units) %>%
  summarise(ET = mean(value))

ggplot(park_kashkadan_ET, aes(x=doy,y=ET))+
  geom_point()+
  geom_smooth()+
  geom_ribbon(aes(ymin = 0,ymax = predict(loess(ET ~ doy))),
              alpha = 0.3,fill = 'blue')+
  ylim(c(0,300))+
  theme_bw()

park_area = st_area(park_sf) %>% as.integer()
green_square = park_area*0.8


Prcp_cum = park_kashkadan_cum %>% filter(year == 2019) %>% mutate(doy = yday(date)) %>% 
  select(doy,prcp_cum) %>% mutate(water_cum = prcp_cum*park_area/1000)
start_day = min(Prcp_cum$doy)
end_day = max(Prcp_cum$doy)

curve = loess(ET ~ doy, park_kashkadan_ET) 
ET = (predict(curve,data.frame(doy = start_day:end_day), se = F))#0.1 * kg/m^2/8d
ET[is.na(ET)]=0
ETcum = cumsum(ET)* green_square*0.1/8/1000

Prcp_cum$ETcum = ETcum 

Prcp_cum = Prcp_cum %>% mutate(irrigation = (ETcum - water_cum)/green_square)

ggplot(Prcp_cum, aes(x = doy,y = ETcum))+
geom_line( color="green")+
geom_line(aes(x=doy,y=water_cum))+
ylab("ET vs Precipitation,m3 for park_kashkadan, 2019")+
theme_bw()
                              
ggplot(Prcp_cum, aes(x = doy,y = irrigation*1000))+
geom_line( color="red")+
geom_hline(yintercept = 0)+
ylab("Irrigation needed,l/m2 for park_kashkadan, 2019")+
theme_bw()
                              
ggplot(Prcp_cum, aes(x = doy,y = irrigation*1000))+
geom_line( color="red")+
                                 geom_hline(yintercept = 0)+
ylim(c(-20,200))+ # Эти параметры вам надо подобрать исходя из ваших данных
ylab("Irrigation needed,l/m2 for park_kashkadan, 2019")+
theme_bw()                               
